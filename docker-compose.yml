version: '3.8'

services:
  math-microservice:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: math-microservice
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 100s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    depends_on:
      rabbitmq:
        condition: service_healthy
      math-microservice:
        condition: service_healthy
    command: ["python", "worker/worker.py"]
    volumes:
      - ./data:/app/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - math-microservice
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"


